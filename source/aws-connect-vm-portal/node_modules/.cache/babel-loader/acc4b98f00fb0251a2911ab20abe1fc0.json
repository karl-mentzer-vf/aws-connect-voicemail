{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport AnalyticsClass from './Analytics';\nimport Amplify, { ConsoleLogger as Logger, Hub } from '@aws-amplify/core';\nvar logger = new Logger('Analytics');\nvar endpointUpdated = false;\nvar authConfigured = false;\nvar analyticsConfigured = false;\nvar _instance = null;\nif (!_instance) {\n  logger.debug('Create Analytics Instance');\n  _instance = new AnalyticsClass();\n}\nvar Analytics = _instance;\nAmplify.register(Analytics);\nexport default Analytics;\nexport { AnalyticsClass };\nexport * from './Providers';\nvar listener = function (capsule) {\n  var channel = capsule.channel,\n    payload = capsule.payload,\n    source = capsule.source;\n  logger.debug('on hub capsule ' + channel, payload);\n  switch (channel) {\n    case 'auth':\n      authEvent(payload);\n      break;\n    case 'storage':\n      storageEvent(payload);\n      break;\n    case 'analytics':\n      analyticsEvent(payload);\n      break;\n    default:\n      break;\n  }\n};\nvar storageEvent = function (payload) {\n  var _a = payload.data,\n    attrs = _a.attrs,\n    metrics = _a.metrics;\n  if (!attrs) return;\n  if (analyticsConfigured) {\n    Analytics.record({\n      name: 'Storage',\n      attributes: attrs,\n      metrics: metrics\n    }).catch(function (e) {\n      logger.debug('Failed to send the storage event automatically', e);\n    });\n  }\n};\nvar authEvent = function (payload) {\n  var event = payload.event;\n  if (!event) {\n    return;\n  }\n  var recordAuthEvent = function (eventName) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var err_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(authConfigured && analyticsConfigured)) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, Analytics.record({\n              name: \"_userauth.\" + eventName\n            })];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n          case 3:\n            err_1 = _a.sent();\n            logger.debug(\"Failed to send the \" + eventName + \" event automatically\", err_1);\n            return [3 /*break*/, 4];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  switch (event) {\n    case 'signIn':\n      return recordAuthEvent('sign_in');\n    case 'signUp':\n      return recordAuthEvent('sign_up');\n    case 'signOut':\n      return recordAuthEvent('sign_out');\n    case 'signIn_failure':\n      return recordAuthEvent('auth_fail');\n    case 'configured':\n      authConfigured = true;\n      if (authConfigured && analyticsConfigured) {\n        sendEvents();\n      }\n      break;\n  }\n};\nvar analyticsEvent = function (payload) {\n  var event = payload.event;\n  if (!event) return;\n  switch (event) {\n    case 'pinpointProvider_configured':\n      analyticsConfigured = true;\n      if (authConfigured && analyticsConfigured) {\n        sendEvents();\n      }\n      break;\n  }\n};\nvar sendEvents = function () {\n  var config = Analytics.configure();\n  if (!endpointUpdated && config['autoSessionRecord']) {\n    Analytics.updateEndpoint({\n      immediate: true\n    }).catch(function (e) {\n      logger.debug('Failed to update the endpoint', e);\n    });\n    endpointUpdated = true;\n  }\n  Analytics.autoTrack('session', {\n    enable: config['autoSessionRecord']\n  });\n};\nHub.listen('auth', listener);\nHub.listen('storage', listener);\nHub.listen('analytics', listener);","map":null,"metadata":{},"sourceType":"module"}