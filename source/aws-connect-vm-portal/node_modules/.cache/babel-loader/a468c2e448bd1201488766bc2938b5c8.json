{"ast":null,"code":"/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *                                                                                                                   *\n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                                                                   \n *      http://www.apache.org/licenses/                                                                                   *                                                                                                                  \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                                                                \n******************************************************************************/import{ApiService}from\"../../service/api.service\";import AuthService from\"../../service/auth.service\";const apiService=new ApiService();const authService=new AuthService(apiService);const AuthActionKey={LOGIN_PENDING:\"LOGIN_PENDING\",LOGIN:\"LOGIN\",LOGOUT:\"LOGOUT\",LOGIN_ERROR:\"LOGIN_ERROR\"};const loginResults=(authenticated,user)=>{return{type:AuthActionKey.LOGIN,value:{isAuthenticated:authenticated,user}};};const loginErrorResults=error=>{return{type:AuthActionKey.LOGIN_ERROR,value:{error}};};const logoutResults=()=>{return{type:AuthActionKey.LOGOUT};};const AuthAction={auth:user=>{return dispatch=>{let payload=user.getSignInUserSession().getIdToken().decodePayload();dispatch(loginResults(true,{email:payload['email'],roles:payload['cognito:groups']}));};},logout:()=>{return dispatch=>{authService.logout();// dispatch(logoutResults());\n// dispatch(loginErrorResults(null));\n// history.push('/login');\n};}};export{AuthActionKey,AuthAction};","map":{"version":3,"names":["ApiService","AuthService","apiService","authService","AuthActionKey","LOGIN_PENDING","LOGIN","LOGOUT","LOGIN_ERROR","loginResults","authenticated","user","type","value","isAuthenticated","loginErrorResults","error","logoutResults","AuthAction","auth","dispatch","payload","getSignInUserSession","getIdToken","decodePayload","email","roles","logout"],"sources":["/home/ec2-user/environment/aws-connect-voicemail/source/aws-connect-vm-portal/src/store/actions/auth.actions.ts"],"sourcesContent":["/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *                                                                                                                   *\n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                                                                   \n *      http://www.apache.org/licenses/                                                                                   *                                                                                                                  \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                                                                \n******************************************************************************/\n\nimport {ApiService} from \"../../service/api.service\";\nimport history from \"../../history\";\nimport AuthService from \"../../service/auth.service\";\nimport {Dispatch} from \"redux\";\nimport {UserInterface} from \"../../interface/user.interface\";\nimport {CognitoUser} from \"amazon-cognito-identity-js\";\n\nconst apiService = new ApiService();\nconst authService = new AuthService(apiService);\n\nconst AuthActionKey = {\n    LOGIN_PENDING: \"LOGIN_PENDING\",\n    LOGIN: \"LOGIN\",\n    LOGOUT: \"LOGOUT\",\n    LOGIN_ERROR: \"LOGIN_ERROR\"\n};\n\nconst loginResults = (authenticated: boolean, user: UserInterface) => {\n    return {\n        type: AuthActionKey.LOGIN,\n        value: {\n            isAuthenticated: authenticated,\n            user\n        }\n    }\n};\n\nconst loginErrorResults = (error: any) => {\n    return {\n        type: AuthActionKey.LOGIN_ERROR,\n        value: {\n            error\n        }\n    }\n};\n\nconst logoutResults = () => {\n    return {\n        type: AuthActionKey.LOGOUT\n    }\n};\n\nconst AuthAction = {\n    auth: (user: CognitoUser) => {\n        return (dispatch: Dispatch) => {\n            let payload = user.getSignInUserSession()!.getIdToken().decodePayload();\n            dispatch(loginResults(true, {\n                email: payload['email'],\n                roles: payload['cognito:groups']\n            }));\n        };\n    },\n    logout: () => {\n        return (dispatch: Dispatch) => {\n            authService.logout();\n            // dispatch(logoutResults());\n            // dispatch(loginErrorResults(null));\n            // history.push('/login');\n        }\n    }\n};\n\nexport {AuthActionKey, AuthAction}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAEA,OAAQA,UAAU,KAAO,2BAA2B,CAEpD,MAAO,CAAAC,WAAW,KAAM,4BAA4B,CAKpD,KAAM,CAAAC,UAAU,CAAG,GAAI,CAAAF,UAAU,CAAC,CAAC,CACnC,KAAM,CAAAG,WAAW,CAAG,GAAI,CAAAF,WAAW,CAACC,UAAU,CAAC,CAE/C,KAAM,CAAAE,aAAa,CAAG,CAClBC,aAAa,CAAE,eAAe,CAC9BC,KAAK,CAAE,OAAO,CACdC,MAAM,CAAE,QAAQ,CAChBC,WAAW,CAAE,aACjB,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGA,CAACC,aAAsB,CAAEC,IAAmB,GAAK,CAClE,MAAO,CACHC,IAAI,CAAER,aAAa,CAACE,KAAK,CACzBO,KAAK,CAAE,CACHC,eAAe,CAAEJ,aAAa,CAC9BC,IACJ,CACJ,CAAC,CACL,CAAC,CAED,KAAM,CAAAI,iBAAiB,CAAIC,KAAU,EAAK,CACtC,MAAO,CACHJ,IAAI,CAAER,aAAa,CAACI,WAAW,CAC/BK,KAAK,CAAE,CACHG,KACJ,CACJ,CAAC,CACL,CAAC,CAED,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CACxB,MAAO,CACHL,IAAI,CAAER,aAAa,CAACG,MACxB,CAAC,CACL,CAAC,CAED,KAAM,CAAAW,UAAU,CAAG,CACfC,IAAI,CAAGR,IAAiB,EAAK,CACzB,MAAQ,CAAAS,QAAkB,EAAK,CAC3B,GAAI,CAAAC,OAAO,CAAGV,IAAI,CAACW,oBAAoB,CAAC,CAAC,CAAEC,UAAU,CAAC,CAAC,CAACC,aAAa,CAAC,CAAC,CACvEJ,QAAQ,CAACX,YAAY,CAAC,IAAI,CAAE,CACxBgB,KAAK,CAAEJ,OAAO,CAAC,OAAO,CAAC,CACvBK,KAAK,CAAEL,OAAO,CAAC,gBAAgB,CACnC,CAAC,CAAC,CAAC,CACP,CAAC,CACL,CAAC,CACDM,MAAM,CAAEA,CAAA,GAAM,CACV,MAAQ,CAAAP,QAAkB,EAAK,CAC3BjB,WAAW,CAACwB,MAAM,CAAC,CAAC,CACpB;AACA;AACA;AACJ,CAAC,CACL,CACJ,CAAC,CAED,OAAQvB,aAAa,CAAEc,UAAU"},"metadata":{},"sourceType":"module"}