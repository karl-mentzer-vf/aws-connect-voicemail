{"ast":null,"code":"/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *                                                                                                                   *\n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                                                                   \n *      http://www.apache.org/licenses/                                                                                   *                                                                                                                  \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                                                                \n******************************************************************************/import AgentsService from\"../../service/agents.service\";import{ApiService}from\"../../service/api.service\";const agentsService=new AgentsService(new ApiService());const AgentsActionKey={AGENTS_LOADING:\"LOADING\",GET_AGENTS:\"GET_AGENTS\",SORT_AGENTS:\"SORT_AGENTS\",FILTER_AGENTS:\"FILTER_AGENTS\",SHOW_AGENT:\"SHOW_AGENT\",UPDATE_IN_PROGRESS:\"UPDATE_IN_PROGRESS\",UPDATE_AGENT:\"UPDATE_AGENT\",UPDATE_AGENT_ERROR:\"UPDATE_AGENT_ERROR\"};const AgentsSortKey={FIRST_NAME:\"firstName\",LAST_NAME:\"lastName\",EMAIL:\"email\",PHONE_TYPE:\"phoneType\",EXTENSION:\"extension\"};const AgentsSortOrder={ASC:\"asc\",DESC:\"desc\"};const loadingResults=loading=>{return{type:AgentsActionKey.AGENTS_LOADING,value:loading};};const getAgentsResults=agents=>{return{type:AgentsActionKey.GET_AGENTS,value:agents};};const sortAgentsResults=(sortKey,sortOrder)=>{return{type:AgentsActionKey.SORT_AGENTS,value:{sortKey,sortOrder}};};const filterAgentsResults=filter=>{return{type:AgentsActionKey.FILTER_AGENTS,value:filter};};const showAgentResults=function(showAgentSettings){let agent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return{type:AgentsActionKey.SHOW_AGENT,value:{showAgentSettings,agent}};};const updatingInProgressResults=updating=>{return{type:AgentsActionKey.UPDATE_IN_PROGRESS,value:updating};};const updateAgentResults=agent=>{return{type:AgentsActionKey.UPDATE_AGENT,value:{agent}};};const updateAgentErrorResults=error=>{return{type:AgentsActionKey.UPDATE_AGENT_ERROR,value:error};};const _getAgents=async(dispatch,next)=>{dispatch(loadingResults(true));try{let agents=await agentsService.getAgents(next);dispatch(getAgentsResults(agents));}catch(err){// console.log(err);\n}finally{dispatch(loadingResults(false));}};const _syncAgent=async dispatch=>{await agentsService.syncAgent();return _getAgents(dispatch,null);};const AgentsAction={syncAgents:()=>async dispatch=>_syncAgent(dispatch),getAgents:next=>dispatch=>_getAgents(dispatch,next),updateAgent:(agentId,extensionNumber,deliverSMSPhoneNumber,deliverSMS,deliverEmail,encryptVoicemail,transcribeVoicemail)=>{return dispatch=>{dispatch(updatingInProgressResults(true));dispatch(updateAgentErrorResults(null));agentsService.updateAgent(agentId,extensionNumber,deliverSMSPhoneNumber,deliverSMS,deliverEmail,encryptVoicemail,transcribeVoicemail).then(agent=>{// console.log(\"Agent Updated\"!, agent);\ndispatch(updateAgentResults(agent));dispatch(showAgentResults(false));}).catch(err=>{dispatch(updateAgentErrorResults(err));}).finally(()=>{dispatch(updatingInProgressResults(false));});};},sortAgents:(sortKey,sortOrder)=>dispatch=>dispatch(sortAgentsResults(sortKey,sortOrder)),filterAgents:filter=>dispatch=>dispatch(filterAgentsResults(filter)),showAgent:(show,agent)=>async dispatch=>{// console.log(agent);\nif(agent==null){dispatch(showAgentResults(show,agent));dispatch(updateAgentErrorResults(null));}else{try{let result=await agentsService.getAgent(agent.userId);dispatch(showAgentResults(show,result));dispatch(updateAgentErrorResults(null));}catch(err){// console.log(err);\n}}}};export{AgentsAction,AgentsActionKey,AgentsSortKey,AgentsSortOrder};","map":{"version":3,"names":["AgentsService","ApiService","agentsService","AgentsActionKey","AGENTS_LOADING","GET_AGENTS","SORT_AGENTS","FILTER_AGENTS","SHOW_AGENT","UPDATE_IN_PROGRESS","UPDATE_AGENT","UPDATE_AGENT_ERROR","AgentsSortKey","FIRST_NAME","LAST_NAME","EMAIL","PHONE_TYPE","EXTENSION","AgentsSortOrder","ASC","DESC","loadingResults","loading","type","value","getAgentsResults","agents","sortAgentsResults","sortKey","sortOrder","filterAgentsResults","filter","showAgentResults","showAgentSettings","agent","arguments","length","undefined","updatingInProgressResults","updating","updateAgentResults","updateAgentErrorResults","error","_getAgents","dispatch","next","getAgents","err","_syncAgent","syncAgent","AgentsAction","syncAgents","updateAgent","agentId","extensionNumber","deliverSMSPhoneNumber","deliverSMS","deliverEmail","encryptVoicemail","transcribeVoicemail","then","catch","finally","sortAgents","filterAgents","showAgent","show","result","getAgent","userId"],"sources":["/home/ec2-user/environment/aws-connect-voicemail/source/aws-connect-vm-portal/src/store/actions/agents.actions.ts"],"sourcesContent":["/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *                                                                                                                   *\n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                                                                   \n *      http://www.apache.org/licenses/                                                                                   *                                                                                                                  \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                                                                \n******************************************************************************/\n\nimport AgentsService from \"../../service/agents.service\";\nimport { ApiService } from \"../../service/api.service\";\nimport { Dispatch } from \"redux\";\nimport AgentDto from \"../../dto/agent.dto\";\nimport { PaginationDto } from \"../../dto/pagination.dto\";\n\nconst agentsService = new AgentsService(new ApiService());\n\nconst AgentsActionKey = {\n  AGENTS_LOADING: \"LOADING\",\n  GET_AGENTS: \"GET_AGENTS\",\n  SORT_AGENTS: \"SORT_AGENTS\",\n  FILTER_AGENTS: \"FILTER_AGENTS\",\n  SHOW_AGENT: \"SHOW_AGENT\",\n  UPDATE_IN_PROGRESS: \"UPDATE_IN_PROGRESS\",\n  UPDATE_AGENT: \"UPDATE_AGENT\",\n  UPDATE_AGENT_ERROR: \"UPDATE_AGENT_ERROR\"\n};\n\nconst AgentsSortKey = {\n  FIRST_NAME: \"firstName\",\n  LAST_NAME: \"lastName\",\n  EMAIL: \"email\",\n  PHONE_TYPE: \"phoneType\",\n  EXTENSION: \"extension\"\n};\n\nconst AgentsSortOrder = {\n  ASC: \"asc\",\n  DESC: \"desc\"\n};\n\nconst loadingResults = (loading: boolean) => {\n  return {\n    type: AgentsActionKey.AGENTS_LOADING,\n    value: loading\n  }\n};\n\nconst getAgentsResults = (agents: PaginationDto<AgentDto>) => {\n  return {\n    type: AgentsActionKey.GET_AGENTS,\n    value: agents\n  }\n};\n\nconst sortAgentsResults = (sortKey: string, sortOrder: string) => {\n  return {\n    type: AgentsActionKey.SORT_AGENTS,\n    value: {\n      sortKey,\n      sortOrder\n    }\n  }\n};\n\nconst filterAgentsResults = (filter: string) => {\n  return {\n    type: AgentsActionKey.FILTER_AGENTS,\n    value: filter\n  }\n};\n\nconst showAgentResults = (showAgentSettings: boolean, agent: AgentDto | null = null) => {\n  return {\n    type: AgentsActionKey.SHOW_AGENT,\n    value: { showAgentSettings, agent }\n  }\n};\n\nconst updatingInProgressResults = (updating: boolean) => {\n  return {\n    type: AgentsActionKey.UPDATE_IN_PROGRESS,\n    value: updating\n  };\n};\n\nconst updateAgentResults = (agent: AgentDto) => {\n  return {\n    type: AgentsActionKey.UPDATE_AGENT,\n    value: { agent }\n  }\n};\n\nconst updateAgentErrorResults = (error: Error | null) => {\n  return {\n    type: AgentsActionKey.UPDATE_AGENT_ERROR,\n    value: error\n  }\n};\n\nconst _getAgents = async (dispatch: Dispatch, next: string | null) => {\n  dispatch(loadingResults(true));\n  try {\n    let agents = await agentsService.getAgents(next);\n    dispatch(getAgentsResults(agents));\n  } catch (err) {\n    // console.log(err);\n  } finally {\n    dispatch(loadingResults(false));\n  }\n};\n\nconst _syncAgent = async (dispatch: Dispatch) => {\n  await agentsService.syncAgent();\n  return _getAgents(dispatch, null);\n};\n\nconst AgentsAction = {\n  syncAgents: () => async (dispatch: Dispatch) => _syncAgent(dispatch),\n  getAgents: (next: string | null) => (dispatch: Dispatch) => _getAgents(dispatch, next),\n  updateAgent: (\n    agentId: string,\n    extensionNumber: string,\n    deliverSMSPhoneNumber: string,\n    deliverSMS: boolean,\n    deliverEmail: boolean,\n    encryptVoicemail: boolean,\n    transcribeVoicemail: boolean\n  ) => {\n    return (dispatch: Dispatch) => {\n      dispatch(updatingInProgressResults(true));\n      dispatch(updateAgentErrorResults(null));\n      agentsService.updateAgent(agentId,\n        extensionNumber, deliverSMSPhoneNumber, deliverSMS,\n        deliverEmail, encryptVoicemail, transcribeVoicemail)\n        .then(agent => {\n          // console.log(\"Agent Updated\"!, agent);\n          dispatch(updateAgentResults(agent));\n          dispatch(showAgentResults(false));\n        })\n        .catch(err => {\n          dispatch(updateAgentErrorResults(err))\n        })\n        .finally(() => {\n          dispatch(updatingInProgressResults(false));\n        })\n    }\n  },\n  sortAgents: (sortKey: string, sortOrder: string) =>\n    (dispatch: Dispatch) =>\n      dispatch(sortAgentsResults(sortKey, sortOrder)),\n  filterAgents: (filter: string) =>\n    (dispatch: Dispatch) =>\n      dispatch(filterAgentsResults(filter)),\n  showAgent: (show: boolean, agent: AgentDto | null) => async (dispatch: Dispatch) => {\n    // console.log(agent);\n\n    if (agent == null) {\n      dispatch(showAgentResults(show, agent));\n      dispatch(updateAgentErrorResults(null));\n    } else {\n      try {\n        let result = await agentsService.getAgent(agent.userId);\n        dispatch(showAgentResults(show, result));\n        dispatch(updateAgentErrorResults(null))\n      } catch (err) {\n        // console.log(err);\n      }\n    }\n  }\n};\n\nexport { AgentsAction, AgentsActionKey, AgentsSortKey, AgentsSortOrder }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}