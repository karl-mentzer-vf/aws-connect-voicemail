{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { GraphQLError } from 'graphql';\nimport { print } from 'graphql/language/printer';\nimport { parse } from 'graphql/language/parser';\nimport { RestClient as RestClass } from './RestClient';\nimport Amplify, { ConsoleLogger as Logger, Credentials, Constants, INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER } from '@aws-amplify/core';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nvar USER_AGENT_HEADER = 'x-amz-user-agent';\nvar logger = new Logger('API');\nexport var graphqlOperation = function (query, variables) {\n  if (variables === void 0) {\n    variables = {};\n  }\n  return {\n    query: query,\n    variables: variables\n  };\n};\n/**\n * Export Cloud Logic APIs\n */\nvar APIClass = /** @class */function () {\n  /**\n   * Initialize Storage with AWS configuration\n   * @param {Object} options - Configuration object for storage\n   */\n  function APIClass(options) {\n    this._api = null;\n    this._options = options;\n    logger.debug('API Options', this._options);\n  }\n  APIClass.prototype.getModuleName = function () {\n    return 'API';\n  };\n  /**\n   * Configure API part with aws configurations\n   * @param {Object} config - Configuration of the API\n   * @return {Object} - The current configuration\n   */\n  APIClass.prototype.configure = function (options) {\n    var _a = options || {},\n      _b = _a.API,\n      API = _b === void 0 ? {} : _b,\n      otherOptions = __rest(_a, [\"API\"]);\n    var opt = __assign(__assign({}, otherOptions), API);\n    logger.debug('configure API', {\n      opt: opt\n    });\n    if (opt['aws_project_region']) {\n      if (opt['aws_cloud_logic_custom']) {\n        var custom = opt['aws_cloud_logic_custom'];\n        opt.endpoints = typeof custom === 'string' ? JSON.parse(custom) : custom;\n      }\n      opt = Object.assign({}, opt, {\n        region: opt['aws_project_region'],\n        header: {}\n      });\n    }\n    if (!Array.isArray(opt.endpoints)) {\n      opt.endpoints = [];\n    }\n    // Check if endpoints has custom_headers and validate if is a function\n    opt.endpoints.forEach(function (endpoint) {\n      if (typeof endpoint.custom_header !== 'undefined' && typeof endpoint.custom_header !== 'function') {\n        logger.warn('API ' + endpoint.name + ', custom_header should be a function');\n        endpoint.custom_header = undefined;\n      }\n    });\n    if (typeof opt.graphql_headers !== 'undefined' && typeof opt.graphql_headers !== 'function') {\n      logger.warn('graphql_headers should be a function');\n      opt.graphql_headers = undefined;\n    }\n    this._options = Object.assign({}, this._options, opt);\n    this.createInstance();\n    return this._options;\n  };\n  /**\n   * Create an instance of API for the library\n   * @return - A promise of true if Success\n   */\n  APIClass.prototype.createInstance = function () {\n    logger.debug('create API instance');\n    if (this._options) {\n      this._api = new RestClass(this._options);\n      return true;\n    } else {\n      return Promise.reject('API not configured');\n    }\n  };\n  /**\n   * Make a GET request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.get = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_1, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.createInstance()];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            error_1 = _a.sent();\n            return [2 /*return*/, Promise.reject(error_1)];\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n            if (endpoint.length === 0) {\n              return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n            }\n            return [2 /*return*/, this._api.get(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Make a POST request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.post = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_2, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.createInstance()];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            error_2 = _a.sent();\n            return [2 /*return*/, Promise.reject(error_2)];\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n            if (endpoint.length === 0) {\n              return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n            }\n            return [2 /*return*/, this._api.post(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Make a PUT request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.put = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_3, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.createInstance()];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            error_3 = _a.sent();\n            return [2 /*return*/, Promise.reject(error_3)];\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n            if (endpoint.length === 0) {\n              return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n            }\n            return [2 /*return*/, this._api.put(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Make a PATCH request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.patch = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_4, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.createInstance()];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            error_4 = _a.sent();\n            return [2 /*return*/, Promise.reject(error_4)];\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n            if (endpoint.length === 0) {\n              return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n            }\n            return [2 /*return*/, this._api.patch(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Make a DEL request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.del = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_5, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.createInstance()];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            error_5 = _a.sent();\n            return [2 /*return*/, Promise.reject(error_5)];\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n            if (endpoint.length === 0) {\n              return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n            }\n            return [2 /*return*/, this._api.del(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Make a HEAD request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  APIClass.prototype.head = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_6, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.createInstance()];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            error_6 = _a.sent();\n            return [2 /*return*/, Promise.reject(error_6)];\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n            if (endpoint.length === 0) {\n              return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n            }\n            return [2 /*return*/, this._api.head(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Getting endpoint for API\n   * @param {string} apiName - The name of the api\n   * @return {string} - The endpoint of the api\n   */\n  APIClass.prototype.endpoint = function (apiName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_7;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 4];\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.createInstance()];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            error_7 = _a.sent();\n            return [2 /*return*/, Promise.reject(error_7)];\n          case 4:\n            return [2 /*return*/, this._api.endpoint(apiName)];\n        }\n      });\n    });\n  };\n  APIClass.prototype._headerBasedAuth = function (defaultAuthenticationType) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, aws_appsync_authenticationType, apiKey, authenticationType, headers, _b, credentialsOK, federatedInfo, session;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this._options, aws_appsync_authenticationType = _a.aws_appsync_authenticationType, apiKey = _a.aws_appsync_apiKey;\n            authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n            headers = {};\n            _b = authenticationType;\n            switch (_b) {\n              case 'API_KEY':\n                return [3 /*break*/, 1];\n              case 'AWS_IAM':\n                return [3 /*break*/, 2];\n              case 'OPENID_CONNECT':\n                return [3 /*break*/, 4];\n              case 'AMAZON_COGNITO_USER_POOLS':\n                return [3 /*break*/, 6];\n            }\n            return [3 /*break*/, 8];\n          case 1:\n            if (!apiKey) {\n              throw new Error('No api-key configured');\n            }\n            headers = {\n              Authorization: null,\n              'X-Api-Key': apiKey\n            };\n            return [3 /*break*/, 9];\n          case 2:\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 3:\n            credentialsOK = _c.sent();\n            if (!credentialsOK) {\n              throw new Error('No credentials');\n            }\n            return [3 /*break*/, 9];\n          case 4:\n            return [4 /*yield*/, Cache.getItem('federatedInfo')];\n          case 5:\n            federatedInfo = _c.sent();\n            if (!federatedInfo || !federatedInfo.token) {\n              throw new Error('No federated jwt');\n            }\n            headers = {\n              Authorization: federatedInfo.token\n            };\n            return [3 /*break*/, 9];\n          case 6:\n            return [4 /*yield*/, Auth.currentSession()];\n          case 7:\n            session = _c.sent();\n            headers = {\n              Authorization: session.getAccessToken().getJwtToken()\n            };\n            return [3 /*break*/, 9];\n          case 8:\n            headers = {\n              Authorization: null\n            };\n            return [3 /*break*/, 9];\n          case 9:\n            return [2 /*return*/, headers];\n        }\n      });\n    });\n  };\n  /**\n   * to get the operation type\n   * @param operation\n   */\n  APIClass.prototype.getGraphqlOperationType = function (operation) {\n    var doc = parse(operation);\n    var operationType = doc.definitions[0].operation;\n    return operationType;\n  };\n  /**\n   * Executes a GraphQL operation\n   *\n   * @param {GraphQLOptions} GraphQL Options\n   * @param {object} additionalHeaders headers to merge in after any `graphql_headers` set in the config\n   * @returns {Promise<GraphQLResult> | Observable<object>}\n   */\n  APIClass.prototype.graphql = function (_a, additionalHeaders) {\n    var paramQuery = _a.query,\n      _b = _a.variables,\n      variables = _b === void 0 ? {} : _b,\n      authMode = _a.authMode;\n    var query = typeof paramQuery === 'string' ? parse(paramQuery) : parse(print(paramQuery));\n    var _c = query.definitions.filter(function (def) {\n        return def.kind === 'OperationDefinition';\n      })[0],\n      operationDef = _c === void 0 ? {} : _c;\n    var operationType = operationDef.operation;\n    switch (operationType) {\n      case 'query':\n      case 'mutation':\n        return this._graphql({\n          query: query,\n          variables: variables,\n          authMode: authMode\n        }, additionalHeaders);\n      case 'subscription':\n        return this._graphqlSubscribe({\n          query: query,\n          variables: variables,\n          authMode: authMode\n        });\n    }\n    throw new Error(\"invalid operation type: \" + operationType);\n  };\n  APIClass.prototype._graphql = function (_a, additionalHeaders) {\n    var query = _a.query,\n      variables = _a.variables,\n      authMode = _a.authMode;\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, region, appSyncGraphqlEndpoint, _c, graphql_headers, customGraphqlEndpoint, customEndpointRegion, headers, _d, _e, _f, _g, _h, _j, body, init, endpoint, error, response, err_1, errors;\n      var _k;\n      return __generator(this, function (_l) {\n        switch (_l.label) {\n          case 0:\n            if (!!this._api) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.createInstance()];\n          case 1:\n            _l.sent();\n            _l.label = 2;\n          case 2:\n            _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () {\n              return {};\n            } : _c, customGraphqlEndpoint = _b.graphql_endpoint, customEndpointRegion = _b.graphql_endpoint_iam_region;\n            _d = [{}];\n            _e = !customGraphqlEndpoint;\n            if (!_e) return [3 /*break*/, 4];\n            return [4 /*yield*/, this._headerBasedAuth(authMode)];\n          case 3:\n            _e = _l.sent();\n            _l.label = 4;\n          case 4:\n            _f = [__assign.apply(void 0, _d.concat([_e]))];\n            _g = customGraphqlEndpoint;\n            if (!_g) return [3 /*break*/, 8];\n            if (!customEndpointRegion) return [3 /*break*/, 6];\n            return [4 /*yield*/, this._headerBasedAuth(authMode)];\n          case 5:\n            _h = _l.sent();\n            return [3 /*break*/, 7];\n          case 6:\n            _h = {\n              Authorization: null\n            };\n            _l.label = 7;\n          case 7:\n            _g = _h;\n            _l.label = 8;\n          case 8:\n            _j = [__assign.apply(void 0, _f.concat([_g]))];\n            return [4 /*yield*/, graphql_headers({\n              query: query,\n              variables: variables\n            })];\n          case 9:\n            headers = __assign.apply(void 0, [__assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), additionalHeaders]), !customGraphqlEndpoint && (_k = {}, _k[USER_AGENT_HEADER] = Constants.userAgent, _k)]);\n            body = {\n              query: print(query),\n              variables: variables\n            };\n            init = {\n              headers: headers,\n              body: body,\n              signerServiceInfo: {\n                service: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n                region: !customGraphqlEndpoint ? region : customEndpointRegion\n              }\n            };\n            endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n            if (!endpoint) {\n              error = new GraphQLError('No graphql endpoint provided.');\n              throw {\n                data: {},\n                errors: [error]\n              };\n            }\n            _l.label = 10;\n          case 10:\n            _l.trys.push([10, 12,, 13]);\n            return [4 /*yield*/, this._api.post(endpoint, init)];\n          case 11:\n            response = _l.sent();\n            return [3 /*break*/, 13];\n          case 12:\n            err_1 = _l.sent();\n            response = {\n              data: {},\n              errors: [new GraphQLError(err_1.message)]\n            };\n            return [3 /*break*/, 13];\n          case 13:\n            errors = response.errors;\n            if (errors && errors.length) {\n              throw response;\n            }\n            return [2 /*return*/, response];\n        }\n      });\n    });\n  };\n  APIClass.prototype._graphqlSubscribe = function (_a) {\n    var query = _a.query,\n      variables = _a.variables,\n      defaultAuthenticationType = _a.authMode;\n    var _b = this._options,\n      region = _b.aws_appsync_region,\n      appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint,\n      aws_appsync_authenticationType = _b.aws_appsync_authenticationType,\n      apiKey = _b.aws_appsync_apiKey,\n      _c = _b.graphql_headers,\n      graphql_headers = _c === void 0 ? function () {\n        return {};\n      } : _c;\n    var authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n    if (Amplify.PubSub && typeof Amplify.PubSub.subscribe === 'function') {\n      return Amplify.PubSub.subscribe('', {\n        provider: INTERNAL_AWS_APPSYNC_REALTIME_PUBSUB_PROVIDER,\n        appSyncGraphqlEndpoint: appSyncGraphqlEndpoint,\n        authenticationType: authenticationType,\n        apiKey: apiKey,\n        query: print(query),\n        region: region,\n        variables: variables,\n        graphql_headers: graphql_headers\n      });\n    } else {\n      logger.debug('No pubsub module applied for subscription');\n      throw new Error('No pubsub module applied for subscription');\n    }\n  };\n  /**\n   * @private\n   */\n  APIClass.prototype._ensureCredentials = function () {\n    return Credentials.get().then(function (credentials) {\n      if (!credentials) return false;\n      var cred = Credentials.shear(credentials);\n      logger.debug('set credentials for api', cred);\n      return true;\n    }).catch(function (err) {\n      logger.warn('ensure credentials error', err);\n      return false;\n    });\n  };\n  return APIClass;\n}();\nexport default APIClass;","map":null,"metadata":{},"sourceType":"module"}