{"ast":null,"code":"/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *                                                                                                                   *\n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                                                                   \n *      http://www.apache.org/licenses/                                                                                   *                                                                                                                  \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                                                                \n******************************************************************************/import React,{Component}from'react';import{Paper,withStyles,Button,Grid,FormControlLabel,Checkbox,TextField}from\"@material-ui/core\";import AsyncButton from\"../common/components/AsyncButton\";import{GlobalSettingsAction}from\"../store/actions/global-settings.actions\";import{connect}from\"react-redux\";import ContactFlow from\"../contact-flow/ContactFlow\";import AuthRoles from\"../auth/AuthRoles\";const styles=theme=>({root:{padding:0},title:{fontSize:25,padding:0,margin:0},paper:{padding:20,width:450},checkBox:{marginTop:15,marginBottom:15},deliveryEmail:{marginTop:15},infoCaption:theme.infoCaption,spacer:{marginTop:\"20px\",marginBottom:\"10px\",borderBottom:\"1px solid rgb(220, 220, 220, 0.5)\"}});class GlobalSettings extends Component{constructor(props){super(props);this.handleEventInputChange=event=>{let{name}=event.target;if(name===\"deliveryEmail\"){this.setState({...this.state,[event.target.name]:event.target.value});}else{this.setState({...this.state,[event.target.name]:event.target.checked});}};this.handleSave=()=>{let settings={transcribeVoicemail:this.state.transcribeEnabled!==null?this.state.transcribeEnabled:this.props.transcribeVoicemail,encryptVoicemail:this.state.encryptionEnabled!==null?this.state.encryptionEnabled:this.props.encryptVoicemail,deliveryEmail:this.state.deliveryEmail===\"\"?this.props.deliveryEmail:this.state.deliveryEmail,availableSMSCountries:this.props.availableSMSCountries};this.props.save(settings);this.props.showModal(false);};this.state={deliveryEmail:\"\",transcribeEnabled:null,encryptionEnabled:null};}componentDidMount(){this.props.fetch();}render(){let classes=this.props.classes;let transcribe=this.state.transcribeEnabled;if(this.state.transcribeEnabled===null){transcribe=this.props.transcribeVoicemail;}let encrypt=this.state.encryptionEnabled;if(this.state.encryptionEnabled===null){encrypt=this.props.encryptVoicemail;}return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(\"h6\",{className:classes.title},\"Global Configurations\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.checkBox},/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Checkbox,{name:\"transcribeEnabled\",id:\"transcribe\",disabled:this.props.loading||this.props.saving,onChange:this.handleEventInputChange,checked:transcribe,color:\"primary\"}),label:\"Allow Voicemail Transcriptions\"}),/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Checkbox,{name:\"encryptionEnabled\",id:\"encrypt\",disabled:this.props.loading||this.props.saving,onChange:this.handleEventInputChange,checked:encrypt,color:\"primary\"}),label:\"Enforce Voicemail Encryption\"}),/*#__PURE__*/React.createElement(TextField,{name:\"deliveryEmail\",disabled:this.props.loading||this.props.saving,className:classes.deliveryEmail,fullWidth:true,placeholder:this.props.deliveryEmail,onChange:this.handleEventInputChange,value:this.state.deliveryEmail||this.props.deliveryEmail,label:\"Delivery Email\"}),/*#__PURE__*/React.createElement(\"p\",{className:classes.infoCaption},\"Important: Delivery Email must be verified via Amazon Simple Email Service before emails can be delivered\")),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:5,direction:\"row\"},/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(Button,{color:\"secondary\",onClick:()=>{this.props.showModal(false);}},\"Cancel\")),/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(AsyncButton,{loading:this.props.saving,color:\"primary\",variant:\"contained\",disabled:this.props.userRole!=\"Administrator\",onClick:this.handleSave},\"Save\"))),/*#__PURE__*/React.createElement(\"div\",{className:classes.spacer}),/*#__PURE__*/React.createElement(ContactFlow,null));}}const mapStateToProps=state=>{let role=\"\";if(!state.auth.user){return{userEmail:null,userRole:null};}let roles=state.auth.user[\"roles\"];if(roles.includes(AuthRoles.MANAGER)){role=\"Manager\";}if(roles.includes(AuthRoles.ADMIN)){role=\"Administrator\";}return{loading:state.globalSettings.loading,deliveryEmail:state.globalSettings.deliveryEmail||\"\",transcribeVoicemail:state.globalSettings.transcribeVoicemail,encryptVoicemail:state.globalSettings.encryptVoicemail,availableSMSCountries:state.globalSettings.availableSMSCountries,saving:state.globalSettings.saving,userRole:role};};const mapDispatchToProps=dispatch=>{return{fetch:()=>dispatch(GlobalSettingsAction.fetchSettings()),showModal:show=>dispatch(GlobalSettingsAction.showModal(show)),save:settings=>dispatch(GlobalSettingsAction.saveSettings(settings))};};export default connect(mapStateToProps,mapDispatchToProps)(withStyles(styles)(GlobalSettings));","map":{"version":3,"names":["React","Component","Paper","withStyles","Button","Grid","FormControlLabel","Checkbox","TextField","AsyncButton","GlobalSettingsAction","connect","ContactFlow","AuthRoles","styles","theme","root","padding","title","fontSize","margin","paper","width","checkBox","marginTop","marginBottom","deliveryEmail","infoCaption","spacer","borderBottom","GlobalSettings","constructor","props","handleEventInputChange","event","name","target","setState","state","value","checked","handleSave","settings","transcribeVoicemail","transcribeEnabled","encryptVoicemail","encryptionEnabled","availableSMSCountries","save","showModal","componentDidMount","fetch","render","classes","transcribe","encrypt","createElement","className","control","id","disabled","loading","saving","onChange","color","label","fullWidth","placeholder","container","spacing","direction","item","onClick","variant","userRole","mapStateToProps","role","auth","user","userEmail","roles","includes","MANAGER","ADMIN","globalSettings","mapDispatchToProps","dispatch","fetchSettings","show","saveSettings"],"sources":["/home/ec2-user/environment/aws-connect-voicemail/source/aws-connect-vm-portal/src/global-settings/GlobalSettings.js"],"sourcesContent":["/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *                                                                                                                   *\n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                                                                   \n *      http://www.apache.org/licenses/                                                                                   *                                                                                                                  \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                                                                \n******************************************************************************/\n\nimport React, {Component} from 'react';\nimport {Paper, withStyles, Button, Grid, FormControlLabel, Checkbox, TextField} from \"@material-ui/core\";\nimport AsyncButton from \"../common/components/AsyncButton\";\nimport {GlobalSettingsAction} from \"../store/actions/global-settings.actions\";\nimport {connect} from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport ContactFlow from \"../contact-flow/ContactFlow\";\nimport AuthRoles from \"../auth/AuthRoles\";\n\nconst styles = (theme) => ({\n    root: {\n        padding: 0\n    },\n    title: {\n        fontSize: 25,\n        padding: 0,\n        margin: 0\n    },\n    paper: {\n        padding: 20,\n        width: 450\n    },\n    checkBox: {\n        marginTop: 15,\n        marginBottom: 15\n    },\n    deliveryEmail: {\n        marginTop: 15\n    },\n    infoCaption: theme.infoCaption,\n    spacer: {\n        marginTop: \"20px\",\n        marginBottom: \"10px\",\n        borderBottom: \"1px solid rgb(220, 220, 220, 0.5)\"\n    }\n});\n\nclass GlobalSettings extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            deliveryEmail: \"\",\n            transcribeEnabled: null,\n            encryptionEnabled: null\n        }\n    }\n\n    componentDidMount() {\n        this.props.fetch();\n    }\n\n    handleEventInputChange = (event) => {\n        let {name} = event.target;\n        if (name === \"deliveryEmail\") {\n            this.setState({\n                ...this.state,\n                [event.target.name]: event.target.value\n            })\n        } else {\n            this.setState({\n                ...this.state,\n                [event.target.name]: event.target.checked\n            })\n        }\n\n    };\n\n    handleSave = () => {\n        let settings = {\n            transcribeVoicemail: this.state.transcribeEnabled !== null ? this.state.transcribeEnabled : this.props.transcribeVoicemail,\n            encryptVoicemail: this.state.encryptionEnabled !== null ? this.state.encryptionEnabled : this.props.encryptVoicemail,\n            deliveryEmail: this.state.deliveryEmail === \"\" ? this.props.deliveryEmail : this.state.deliveryEmail,\n            availableSMSCountries: this.props.availableSMSCountries\n        };\n        this.props.save(settings);\n        this.props.showModal(false);\n    };\n\n    render() {\n\n        let classes = this.props.classes;\n\n        let transcribe = this.state.transcribeEnabled;\n        if (this.state.transcribeEnabled === null) {\n            transcribe = this.props.transcribeVoicemail\n        }\n\n        let encrypt = this.state.encryptionEnabled;\n        if (this.state.encryptionEnabled === null) {\n            encrypt = this.props.encryptVoicemail\n        }\n\n        return (\n            <div className={classes.root}>\n                <h6 className={classes.title}>Global Configurations</h6>\n                <div className={classes.checkBox}>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                name=\"transcribeEnabled\"\n                                id=\"transcribe\"\n                                disabled={this.props.loading || this.props.saving}\n                                onChange={this.handleEventInputChange}\n                                checked={transcribe}\n                                color=\"primary\"/>\n                        }\n                        label=\"Allow Voicemail Transcriptions\"/>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                name=\"encryptionEnabled\"\n                                id=\"encrypt\"\n                                disabled={this.props.loading || this.props.saving}\n                                onChange={this.handleEventInputChange}\n                                checked={encrypt}\n                                color=\"primary\"/>\n                        }\n                        label=\"Enforce Voicemail Encryption\"/>\n                    <TextField\n                        name=\"deliveryEmail\"\n                        disabled={this.props.loading || this.props.saving}\n                        className={classes.deliveryEmail}\n                        fullWidth={true}\n                        placeholder={this.props.deliveryEmail}\n                        onChange={this.handleEventInputChange}\n                        value={this.state.deliveryEmail || this.props.deliveryEmail}\n                        label={\"Delivery Email\"}\n                    />\n                    <p className={classes.infoCaption}>Important: Delivery Email must be verified via Amazon Simple\n                        Email Service before emails can be delivered</p>\n                </div>\n                <Grid container spacing={5} direction=\"row\">\n                    <Grid item>\n                        <Button color=\"secondary\" onClick={() => {\n                            this.props.showModal(false)\n                        }}>Cancel</Button>\n                    </Grid>\n                    <Grid item>\n                        <AsyncButton loading={this.props.saving} color=\"primary\" variant=\"contained\" disabled={this.props.userRole != \"Administrator\"} onClick={this.handleSave}>Save</AsyncButton>\n                    </Grid>\n                </Grid>\n                <div className={classes.spacer}></div>\n                <ContactFlow/>\n            </div>\n        )\n    }\n}\n\nGlobalSettings.propTypes = {\n    loading: PropTypes.bool,\n    deliveryEmail: PropTypes.string,\n    transcribeVoicemail: PropTypes.bool,\n    encryptVoicemail: PropTypes.string,\n    saving: PropTypes.bool,\n    fetch: PropTypes.func,\n    showModal: PropTypes.func,\n    save: PropTypes.func\n};\n\nconst mapStateToProps = (state) => {\n    let role = \"\";\n    if (!state.auth.user) {\n        return {\n            userEmail: null,\n            userRole: null\n        }\n    }\n\n    let roles = state.auth.user[\"roles\"];\n    if (roles.includes(AuthRoles.MANAGER)) {\n        role = \"Manager\";\n    }\n\n    if (roles.includes(AuthRoles.ADMIN)) {\n        role = \"Administrator\"\n    }\n\n    return {\n        loading: state.globalSettings.loading,\n        deliveryEmail: state.globalSettings.deliveryEmail || \"\",\n        transcribeVoicemail: state.globalSettings.transcribeVoicemail,\n        encryptVoicemail: state.globalSettings.encryptVoicemail,\n        availableSMSCountries: state.globalSettings.availableSMSCountries,\n        saving: state.globalSettings.saving,\n        userRole: role\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetch: () => dispatch(GlobalSettingsAction.fetchSettings()),\n        showModal: (show) => dispatch(GlobalSettingsAction.showModal(show)),\n        save: (settings) => dispatch(GlobalSettingsAction.saveSettings(settings))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(GlobalSettings))"],"mappings":"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"},"metadata":{},"sourceType":"module"}