{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/repo/users-repo.js","webpack:///./src/domain/connect-agent.domain.js","webpack:///./src/errors/agent.errors.js","webpack:///./src/service/connect-agent.service.js","webpack:///./src/domain/connect-user.domain.js","webpack:///./src/service/connect.service.js","webpack:///./src/handler/sync-vm-connect.js","webpack:///./src/errors/standard.errors.js","webpack:///./src/lib/metrics.js","webpack:///external \"aws-sdk\"","webpack:///external \"source-map-support/register\"","webpack:///./src/lib/dynamo.js","webpack:///./src/domain/agent.domain.js","webpack:///./src/lib/responder.js","webpack:///external \"https\"","webpack:///external \"awesome-phonenumber\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","UsersRepo","this","dynamo","process","env","USERS_TABLE_NAME","amazonConnectInstanceId","AMAZON_CONNECT_INSTANCE_ARN","extension","params","IndexName","KeyConditionExpression","ExpressionAttributeValues","query","then","items","length","userId","Key","agentId","getItem","item","next","size","param","Limit","Select","ExclusiveStartKey","JSON","parse","Buffer","from","toString","scanWithNext","scan","agent","data","Item","createAgentData","put","deliverSMSPhoneNumber","deliverSMS","deliverEmail","encryptVoicemail","transcribeVoicemail","expressionAttrValues","email","sms","enabled","phoneNumber","updateExpression","UpdateExpression","update","values","batchWrite","ConnectAgent","connectUser","super","connectService","usersRepo","getAgentByExtension","getConnectUser","user","getAgentByUserId","getAgents","Promise","all","listConnectUsers","getAllAgents","connectUsers","dbUsers","needUpdate","forEach","found","find","dbUser","Id","username","Username","push","PutRequest","createAgentCreateParam","DeleteRequest","createAgentDeleteParam","_validateAgentUpdate","createAgentIfNeeded","updateAgentById","getConnectAgentByUserId","createAgentPromise","createAgent","resolve","reject","undefined","phone","isValid","getNumber","Number","isNaN","ConnectUser","userMap","detail","arn","firstName","lastName","phoneType","autoAccept","deskPhoneNumber","directoryUserId","routingProfileId","AWS","instanceId","split","connect","Connect","maxBackOffTime","users","promises","map","InstanceId","UserId","describeUser","err","console","log","User","_listConnectUsers","list","nextToken","retry","MaxResults","listUsers","promise","UserSummaryList","NextToken","concat","catch","warn","Math","min","pow","setTimeout","agentService","sendMetrics","status","details","SEND_ANON_DATA","sendAnonymousData","uuid","UUID","e","message","syncHandler","event","context","syncConnectAgents","Error","syncRequestHandler","Response","stringify","GenericError","developerMessage","MissingParameterError","parameter","InvalidParameterError","MissingParametersError","HTTPS","Metrics","Host","Path","payload","assign","Solution","SOLUTION_ID","TimeStamp","Date","toISOString","replace","Data","buffers","hostname","Constants","port","path","method","headers","request","response","on","chunk","statusCode","statusMessage","write","end","require","DynamoDBService","tableName","client","DynamoDB","DocumentClient","result","Items","allItems","LastEvaluatedKey","callback","batch","startingIndex","_batchWrite","index","nextData","endIndex","batchToUpdate","slice","batchParam","RequestItems","Agent","agentMap","deliveryOptions","ALLOW_ORIGIN_HEADER","Responder","body","cors","customHeaders","error","description","errorMessage","errorName","errorStack","stack"],"mappings":"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","file":"sync-vm-connect.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1355);\n","/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved. \n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                              \n *      http://www.apache.org/licenses/                                        \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                              \n******************************************************************************/\n\nimport {DynamoDBService} from \"../lib/dynamo\";\nimport {Agent} from \"../domain/agent.domain\";\n\nclass UsersRepo {\n\n    constructor() {\n        this.dynamo = new DynamoDBService(process.env.USERS_TABLE_NAME);\n        this.amazonConnectInstanceId = process.env.AMAZON_CONNECT_INSTANCE_ARN;\n    }\n\n    /**\n     * @param extension\n     * @returns {Promise<object>}\n     */\n    getAgentByExtension(extension) {\n        let params = {\n            IndexName: \"AgentExtensionIndex\",\n            KeyConditionExpression: \"extension = :ext\",\n            ExpressionAttributeValues: {\n                \":ext\": extension\n            },\n        };\n        return this.dynamo.query(params)\n            .then(items => {\n                return items.length > 0 ? new Agent(items[0]) : null;\n            });\n    }\n\n    getAgentByUserId(userId) {\n        let params = {\n            Key: {\n                agentId: userId\n            }\n        };\n        return this.dynamo.getItem(params).then(item => {\n            return item ? new Agent(item) : null;\n        });\n    }\n\n    getAgents(next, size) {\n        let param = {\n            Limit: size || 1000,\n            Select: \"ALL_ATTRIBUTES\"\n        };\n\n        if (next) {\n            param.ExclusiveStartKey = JSON.parse(Buffer.from(next, 'base64').toString('utf-8'));\n        }\n\n        return this.dynamo\n            .scanWithNext(param);\n    }\n\n    getAllAgents() {\n        return this.dynamo\n            .scan({\n                Select: \"ALL_ATTRIBUTES\"\n            });\n    }\n\n    createAgentCreateParam(agent) {\n        let data = {\n            Item: {\n                ...agent,\n                agentId: agent.userId\n            }\n        };\n        if (agent.extension === \"\") {\n            delete data.Item.extension;\n        }\n\n        return data;\n    }\n\n    createAgentDeleteParam(agent) {\n        return {\n            Key: {\n                agentId: agent.userId\n            }\n        };\n    }\n\n    createAgent(agent) {\n        let params = this.createAgentData(agent)\n        return this.dynamo.put(params);\n    }\n\n    updateAgentById(agentId, {extension, deliverSMSPhoneNumber, deliverSMS, deliverEmail, encryptVoicemail, transcribeVoicemail}) {\n        let expressionAttrValues = {\n            \":tv\": transcribeVoicemail || false,\n            \":ev\": encryptVoicemail || false,\n            \":de\": deliverEmail,\n            \":do\": {\n                email: deliverEmail,\n                sms: {\n                    enabled: deliverSMS,\n                    phoneNumber: deliverSMSPhoneNumber === \"\" ? \"null\" : deliverSMSPhoneNumber\n                }\n\n            }\n        };\n\n        if (extension !== null && extension !== \"\") {\n            expressionAttrValues[\":ext\"] = extension;\n        }\n        let updateExpression = \"SET transcribeVoicemail=:tv, encryptVoicemail = :ev, deliveryEmail = :de, deliveryOptions = :do\";\n        (extension === null || extension === \"\") ? updateExpression += ` REMOVE extension` : updateExpression += `, extension = :ext`;\n\n        let params = {\n            Key: {\n                agentId: agentId\n            },\n            ExpressionAttributeValues: expressionAttrValues,\n            UpdateExpression: updateExpression\n        };\n        return this.dynamo.update(params);\n    }\n\n    batchWrite(values) {\n        return this.dynamo.batchWrite(values, 0);\n    }\n}\n\nexport {UsersRepo};","/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *                                                                                                                   *\n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                                                                   \n *      http://www.apache.org/licenses/                                                                                   *                                                                                                                  \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                                                                \n******************************************************************************/\n\nclass ConnectAgent {\n\n    /**\n     * @param {Agent} agent\n     * @param {ConnectUser} connectUser\n     */\n    constructor(agent, connectUser) {\n        this.userId = agent.userId;\n        this.agent = agent;\n        this.connectUser = connectUser;\n    }\n\n}\n\nexport {ConnectAgent};","/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *                                                                                                                   *\n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                                                                   \n *      http://www.apache.org/licenses/                                                                                   *                                                                                                                  \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                                                                \n******************************************************************************/\n\nimport {GenericError} from \"./standard.errors\";\n\nclass ExtensionNumberRequiredError extends GenericError {\n    constructor() {\n        super(\n            \"ExtensionNumberRequiredError\",\n            \"Please provide an extension number.\",\n            \"Extension number is required to update an agent\"\n        );\n    }\n}\n\nclass ExtensionInUseError extends GenericError {\n    constructor(extension) {\n        super(\n            \"ExtensionInUseError\",\n            \"Extension already in use. Please provide a different extension number.\",\n            `Cannot have more than one user assigned to the extension number: ${extension}`\n        );\n    }\n}\n\nexport {\n    ExtensionNumberRequiredError,\n    ExtensionInUseError\n};","/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved. \n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                              \n *      http://www.apache.org/licenses/                                        \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                              \n******************************************************************************/\n\nimport {ConnectAgent} from \"../domain/connect-agent.domain\";\nimport {\n    MissingParameterError,\n    InvalidParameterError, MissingParametersError, GenericError\n} from \"../errors/standard.errors\";\nimport {Agent} from \"../domain/agent.domain\";\nimport {\n    ExtensionInUseError\n} from \"../errors/agent.errors\";\n\nimport PhoneNumber from 'awesome-phonenumber';\n\nclass ConnectAgentService {\n\n    constructor(connectService, usersRepo) {\n        this.usersRepo = usersRepo;\n        this.connectService = connectService;\n    }\n\n    /**\n     * @param extension\n     * @returns {Promise<ConnectAgent>}\n     */\n    getConnectAgentByExtension(extension) {\n        return this.usersRepo.getAgentByExtension(extension)\n            .then(agent => this.connectService.getConnectUser(agent.userId)\n                .then(connectUser => new ConnectAgent(agent, connectUser)));\n    }\n\n    /**\n     * @param userId\n     * @returns {Promise<ConnectAgent>}\n     */\n    getConnectAgentByUserId(userId) {\n        return this.connectService.getConnectUser(userId)\n            .then(user => this.usersRepo.getAgentByUserId(userId)\n                .then(agent => new ConnectAgent(agent, user)));\n    }\n\n    /**\n     * @returns {Promise<ConnectAgent[]>}\n     */\n    getConnectAgents(next, size) {\n        return this.usersRepo.getAgents(next, size);\n    }\n\n    syncConnectAgents() {\n        // collect all users in the system\n        return Promise.all([this.connectService.listConnectUsers(), this.usersRepo.getAllAgents()])\n            .then(values => {\n                let [connectUsers, dbUsers] = values;\n                let needUpdate = [];\n\n                connectUsers.forEach(connectUser => {\n                    const found = dbUsers.find(dbUser => dbUser.userId === connectUser.Id);\n                    let agent;\n                    if (found && found.username !== connectUser.Username) {\n                        agent = {\n                            ...found,\n                            username: connectUser.Username\n                        };\n                        needUpdate.push({PutRequest:this.usersRepo.createAgentCreateParam(agent)});\n                    } else if (!found) {\n                        agent = {\n                            userId: connectUser.Id,\n                            username: connectUser.Username\n                        };\n                        needUpdate.push({PutRequest: this.usersRepo.createAgentCreateParam(agent)});\n                    }\n                });\n\n                dbUsers.forEach(dbUser => {\n                    const found = connectUsers.find(connectUser => connectUser.Id === dbUser.userId);\n                    if (!found) {\n                        needUpdate.push({DeleteRequest: this.usersRepo.createAgentDeleteParam(dbUser)});\n                    }\n                });\n\n                if(needUpdate.length > 0) {\n                    return this.usersRepo.batchWrite(needUpdate);\n                }\n            });\n    }\n\n    updateAgentById(agentId, update) {\n        return this._validateAgentUpdate(agentId, update)\n            .then(() => this.createAgentIfNeeded(agentId, update.extension))\n            .then(() => this.usersRepo.updateAgentById(agentId, update))\n            .then(() => this.getConnectAgentByUserId(agentId));\n    }\n\n    createAgentIfNeeded(agentId, extension) {\n        let createAgentPromise = this.usersRepo.getAgentByUserId(agentId).then(agent => {\n            if (agent === null) return this.usersRepo.createAgent(Agent.create(agentId, extension));\n            return agent;\n        });\n        if (extension) {\n            return this.usersRepo.getAgentByExtension(extension)\n                .then(agent => {\n                    if (agent != null && agent.userId !== agentId) {\n                        throw new ExtensionInUseError(extension);\n                    }\n                    return agent;\n                }).then(() => createAgentPromise);\n        } else {\n            return createAgentPromise;\n        }\n    }\n\n    _validateAgentUpdate(agentId, update) {\n        return new Promise((resolve, reject) => {\n            let {extension, deliverSMSPhoneNumber, deliverSMS, deliverEmail, encryptVoicemail, transcribeVoicemail} = update;\n            if (!agentId) {\n                reject(new MissingParameterError(\"agentId\"));\n                return;\n            }\n\n            if (deliverSMS === true && (deliverSMSPhoneNumber === undefined || deliverSMSPhoneNumber === \"\")) {\n                reject(new InvalidParameterError(\n                    \"Please provide a phone number for SMS delivery\",\n                    \"deliverSMSPhoneNumber cannot be null or empty if deliverSMS is true\"));\n                return;\n            }\n\n            if (deliverSMSPhoneNumber) {\n                let phone = new PhoneNumber(deliverSMSPhoneNumber);\n                if (!phone.isValid()) {\n                    reject(new GenericError(\n                        \"InvalidPhoneNumberError\",\n                        \"The phone number you've entered is invalid.  Please enter a valid phone number and try again.\",\n                        `Phone number cannot be validated for ${deliverSMSPhoneNumber}`\n                    ));\n                } else {\n                    update[\"deliverSMSPhoneNumber\"] = phone.getNumber();\n                }\n            }\n\n            if (update.hasOwnProperty(\"extension\") &&\n                (update[\"extension\"].length > 5 || Number.isNaN(update[\"extension\"]))) {\n                reject(new InvalidParameterError(\"Invalid extension number\", \"Extension number must be numeric and less than 5 digits.\"));\n                return;\n            }\n\n            if (!update.hasOwnProperty(\"extension\") ||\n                !update.hasOwnProperty(\"deliverSMS\") ||\n                !update.hasOwnProperty(\"deliverEmail\") ||\n                !update.hasOwnProperty(\"transcribeVoicemail\") ||\n                !update.hasOwnProperty(\"encryptVoicemail\")\n            ) {\n                reject(new MissingParametersError());\n                return;\n            }\n\n            resolve({\n                agentId,\n                update\n            });\n        });\n    }\n\n}\n\nexport {ConnectAgentService};","/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *                                                                                                                   *\n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                                                                   \n *      http://www.apache.org/licenses/                                                                                   *                                                                                                                  \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                                                                \n******************************************************************************/\n\nclass ConnectUser {\n\n    constructor(userMap, detail = true) {\n        this.userId = userMap[\"Id\"];\n        this.arn = userMap[\"Arn\"];\n        this.username = userMap[\"Username\"];\n\n        if (!detail) {\n            return;\n        }\n\n        this.firstName = userMap[\"IdentityInfo\"][\"FirstName\"];\n        this.lastName = userMap[\"IdentityInfo\"][\"LastName\"];\n        this.email = userMap[\"IdentityInfo\"][\"Email\"];\n\n        if (userMap.hasOwnProperty(\"PhoneConfig\")) {\n            this.phoneType = userMap[\"PhoneConfig\"][\"PhoneType\"];\n            this.autoAccept = userMap[\"PhoneConfig\"][\"AutoAccept\"];\n            this.deskPhoneNumber = userMap[\"PhoneConfig\"][\"DeskPhoneNumber\"];\n        } else {\n            this.phoneType = null;\n            this.autoAccept = null;\n            this.deskPhoneNumber = null;\n        }\n\n        this.directoryUserId = userMap[\"DirectoryUserId\"];\n        this.routingProfileId = userMap[\"RoutingProfileId\"];\n    }\n\n    getFullName() {\n        return `${this.firstName} ${this.lastName}`;\n    }\n\n}\n\nexport {ConnectUser};","/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved. \n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                              \n *      http://www.apache.org/licenses/                                        \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                              \n******************************************************************************/\n\nimport {ConnectUser} from \"../domain/connect-user.domain\";\n\nconst AWS = require('aws-sdk');\nconst delay = t => new Promise(resolve => setTimeout(resolve, t));\n\nclass ConnectService {\n\n    constructor() {\n        this.instanceId = process.env.AMAZON_CONNECT_INSTANCE_ARN.split('/')[1];\n        this.connect = new AWS.Connect();\n\n        // max backoff time set to 45 sec\n        this.maxBackOffTime = 45;\n    }\n\n\n    /**\n     * @returns {Promise<ConnectUser[]>}\n     */\n    getConnectUsers() {\n        return this.listConnectUsers()\n            .then(users => {\n                let promises = users.map(user => this.getConnectUser(user.Id));\n                return Promise.all(promises);\n            });\n    }\n\n    /**\n     *\n     * @param userId\n     * @returns {Promise<ConnectUser>}\n     */\n    getConnectUser(userId) {\n        return new Promise((resolve, reject) => {\n            let params = {\n                InstanceId: this.instanceId,\n                UserId: userId\n            };\n            this.connect.describeUser(params, (err, data) => {\n                if (err) {\n                    console.log(\"Error\", err);\n                    reject(err);\n                    return;\n                }\n                if (!data) {\n                    console.log(\"No user found\");\n                    reject(err);\n                    return;\n                }\n                resolve(new ConnectUser(data.User));\n            });\n        });\n    }\n\n    listConnectUsers() {\n        return this._listConnectUsers([], null, 0);\n    }\n\n\n    _listConnectUsers(list, nextToken, retry) {\n        let params = {\n            InstanceId: this.instanceId,\n            MaxResults: 1000\n        };\n        if (nextToken) {\n            params[\"NextToken\"] = nextToken;\n        }\n\n        return this.connect.listUsers(params)\n            .promise()\n            .then(data => {\n                let {UserSummaryList, NextToken} = data;\n                let users = list.concat(UserSummaryList);\n                if (NextToken) {\n                    return this._listConnectUsers(users, NextToken, 0);\n                } else {\n                    return users;\n                }\n            })\n            .catch(err => {\n                console.warn(\"list connect user failed. Retry: \" + retry, err);\n                if (retry > 5) {\n                    throw err;\n                }\n\n                return delay(Math.min(Math.pow(retry, 2), this.maxBackOffTime))\n                    .then(() => {\n                        return this._listConnectUsers(list, nextToken, retry + 1);\n                    })\n            });\n    }\n\n}\n\nexport {ConnectService};","/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *                                                                                                                   *\n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                                                                   \n *      http://www.apache.org/licenses/                                                                                   *                                                                                                                  \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                                                                \n******************************************************************************/\n\nimport 'source-map-support/register'\nimport {ConnectAgentService} from \"../service/connect-agent.service\";\nimport {ConnectService} from \"../service/connect.service\";\nimport {UsersRepo} from \"../repo/users-repo\";\nimport {Responder} from \"../lib/responder\";\nimport {Metrics} from \"../lib/metrics\";\n\nconst agentService = new ConnectAgentService(new ConnectService(), new UsersRepo());\n\nexports.syncHandler = (event, context) => {\n  return agentService\n      .syncConnectAgents()\n      .then(agent => {\n        sendMetrics(\"Success\");\n      })\n      .catch(err => {\n        let details = Responder.Error(400, err, \"Unable to sync agents\", true)\n        sendMetrics(\"Failure\", details);\n      });\n};\n\nexports.syncRequestHandler = (event, context) => {\n  return agentService\n      .syncConnectAgents()\n      .then(agent => {\n        sendMetrics(\"Success\");\n        return Responder.Response(200, {}, true);\n      })\n      .catch(err => {\n        console.log(\"returning a 400: \" + JSON.stringify(err));\n        let details = Responder.Error(400, err, \"Unable to sync agents\", true)\n        sendMetrics(\"Failure\", details);\n        return details;\n      });\n};\n\nfunction sendMetrics(status, details) {\n  if (process.env.SEND_ANON_DATA != \"true\") {\n    return;\n  }\n\n  Metrics.sendAnonymousData({\n    uuid: process.env.UUID,\n    process: 'sync',\n    status: status,\n    details: details || ''\n  }).catch(e => console.log(`sendAnonymous: ${e.message}`));\n}","/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *                                                                                                                   *\n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                                                                   \n *      http://www.apache.org/licenses/                                                                                   *                                                                                                                  \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                                                                \n******************************************************************************/\n\nclass GenericError extends Error {\n    constructor(name, message, developerMessage) {\n        super();\n        this.message = message;\n        this.developerMessage = developerMessage;\n        this.name = name;\n    }\n}\n\nclass MissingParameterError extends GenericError {\n    constructor(parameter) {\n        super(\n            \"MissingParameterError\",\n            `Missing parameter`,\n            `Missing parameter: ${parameter}`\n        );\n    }\n}\n\nclass InvalidParameterError extends GenericError {\n    constructor(message, developerMessage) {\n        super(\n            \"InvalidParameterValueError\",\n            message,\n            developerMessage\n        );\n    }\n}\n\nclass MissingParametersError extends GenericError {\n    constructor() {\n        super(\n            \"MissingParametersError\",\n            `One or more parameters are missing`,\n            `You have one ore more parameters miss, please see documentation for more information.`\n        );\n    }\n}\n\nexport {\n    GenericError,\n    MissingParameterError,\n    InvalidParameterError,\n    MissingParametersError\n};","/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved. \n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                              \n *      http://www.apache.org/licenses/                                        \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                              \n******************************************************************************/\n\n/**\n * @author MediaEnt Solutions\n */\n\n/* eslint-disable no-console */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable import/no-extraneous-dependencies */\nconst HTTPS = require('https');\n\n/**\n * @class Metrics\n * @description send anonymous data to help us to improve the solution\n */\nclass Metrics {\n  static get Constants() {\n    return {\n      Host: 'metrics.awssolutionsbuilder.com',\n      Path: '/generic',\n    };\n  }\n\n  /**\n   * @static\n   * @function sendAnonymousData\n   * @description send anonymous data to aws solution builder team to help us improve the solution.\n   * @param {*} data - JSON data to send anonymously\n   * @param {*} env - overwrite payload parameters, used for custom-resource lambda.\n   */\n  static async sendAnonymousData(data, env) {\n    return new Promise((resolve, reject) => {\n      const payload = Object.assign({\n        Solution: process.env.SOLUTION_ID,\n        UUID: process.env.UUID,\n        TimeStamp: (new Date()).toISOString().replace('T', ' ').replace('Z', ''),\n        Data: data,\n      }, env);\n\n      if (!payload.Data || !payload.Solution || !payload.UUID) {\n        resolve(undefined);\n      }\n\n      const buffers = [];\n\n      const params = {\n        hostname: Metrics.Constants.Host,\n        port: 443,\n        path: Metrics.Constants.Path,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      const request = HTTPS.request(params, (response) => {\n        response.on('data', chunk =>\n          buffers.push(chunk));\n\n        response.on('end', () => {\n          if (response.statusCode >= 400) {\n            reject(new Error(`${response.statusCode} ${response.statusMessage} ${params.hostname}`));\n            return;\n          }\n          resolve(Buffer.concat(buffers));\n        });\n      });\n\n      request.write(JSON.stringify(payload));\n\n      request.on('error', e =>\n        reject(e));\n\n      request.end();\n      console.log(\"successfully sent metrics\");\n    });\n  }\n}\n\nmodule.exports = {\n  Metrics,\n};","module.exports = require(\"aws-sdk\");","module.exports = require(\"source-map-support/register\");","/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved. \n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                              \n *      http://www.apache.org/licenses/                                        \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                              \n******************************************************************************/\n\nconst AWS = require(\"aws-sdk\");\n\nclass DynamoDBService {\n\n    constructor(tableName) {\n        this.tableName = tableName;\n        this.client = new AWS.DynamoDB.DocumentClient();\n    }\n\n    /**\n     * @param params\n     * @returns {Promise<Object>}\n     */\n    update(params) {\n        params[\"TableName\"] = this.tableName;\n        params[\"ReturnValues\"] = \"ALL_NEW\";\n        return this.client.update(params).promise();\n    }\n\n    put(params) {\n        params[\"TableName\"] = this.tableName;\n        return this.client.put(params).promise();\n    }\n\n    /**\n     * @param params\n     * @returns {Promise<DocumentClient.AttributeMap[] | null>}\n     */\n    query(params) {\n        params[\"TableName\"] = this.tableName;\n        return this.client.query(params).promise().then(result => result.Items || null);\n    }\n\n    scan(params, items = []) {\n        params[\"TableName\"] = this.tableName;\n        return this.client.scan(params).promise().then(result => {\n            let allItems = items;\n\n            if (result.Items) {\n                allItems = items.concat(result.Items);\n            }\n            if (result.LastEvaluatedKey){\n                console.log(\"Rescanning with next page\");\n                params.ExclusiveStartKey = result.LastEvaluatedKey;\n                return this.scan(params, allItems);\n            } else {\n                return allItems;\n            }\n        });\n    }\n\n    queryWithNext(params) {\n      params[\"TableName\"] = this.tableName;\n      return this.client.query(params).promise().then(result => {\n        let data = {\n          data: result.Items || []\n        };\n        if(result.LastEvaluatedKey) {\n          data.next = Buffer.from(JSON.stringify(result.LastEvaluatedKey), 'utf8').toString('base64');\n        }\n        return data;\n      });\n    }\n\n    scanWithNext(params) {\n        params[\"TableName\"] = this.tableName;\n        return this.client.scan(params).promise().then(result => {\n            let data = {\n                data: result.Items || []\n            };\n            if(result.LastEvaluatedKey) {\n                data.next = Buffer.from(JSON.stringify(result.LastEvaluatedKey), 'utf8').toString('base64');\n            }\n            return data;\n        });\n    }\n\n    /**\n     * @param params\n     * @param callback\n     * @returns {Promise<DocumentClient.AttributeMap | null>}\n     */\n    getItem(params, callback) {\n        params[\"TableName\"] = this.tableName;\n        return this.client.get(params).promise().then(result => result.Item || null);\n    }\n\n    batchWrite(batch, startingIndex) {\n        return new Promise((resolve, reject) => {\n            this._batchWrite(batch, startingIndex).then(result => {\n                if (batch.length > result.index) {\n                    this.batchWrite(batch, result.index).then(nextData => {\n                        resolve(nextData);\n                    });\n                } else {\n                    resolve(result.data);\n                }\n            });\n        });\n    }\n\n    _batchWrite(batch, startingIndex) {\n        return new Promise((resolve, reject) => {\n            // DDB has a limit of 25 items at once\n            let maxDdbUpdate = 24;\n            let endIndex = (batch.length > startingIndex + maxDdbUpdate) ? startingIndex + maxDdbUpdate : batch.length;\n            let batchToUpdate = batch.slice(startingIndex, endIndex);\n\n            let batchParam = {\n                RequestItems: {\n                    [this.tableName]: batchToUpdate\n                }\n            };\n            this.client.batchWrite(batchParam, (err, data) => {\n                if (err) {\n                    console.log(\"Any error? \" + JSON.stringify(err, null, 2));\n                }\n                resolve({'index': startingIndex + maxDdbUpdate, 'data': data});\n            });\n        });\n    }\n}\n\nexport {DynamoDBService};","/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                           *                                                                                                                   *\n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                                                                   \n *      http://www.apache.org/licenses/                                                                                   *                                                                                                                  \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                                                                \n******************************************************************************/\n\nclass Agent {\n\n    constructor(agentMap) {\n        this.userId = agentMap[\"userId\"];\n        this.extension = agentMap[\"extension\"];\n        this.username = agentMap[\"username\"];\n        this.transcribeVoicemail = agentMap[\"transcribeVoicemail\"] || false;\n        this.encryptVoicemail = agentMap[\"encryptVoicemail\"] || false;\n        this.deliveryOptions = agentMap[\"deliveryOptions\"] || {\n            sms: {\n                enabled: false,\n                phoneNumber: null\n            },\n            email: false\n        };\n    }\n\n    static create(userId, extension = null) {\n        return new Agent({\n            userId, extension: extension, deliveryOptions: {\n                sms: {\n                    enabled: false,\n                    phoneNumber: null\n                },\n                email: false\n            }\n        });\n    }\n\n}\n\nexport {Agent};","/******************************************************************************\n *  Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved. \n *  Licensed under the Apache License Version 2.0 (the 'License'). You may not\n *  use this file except in compliance with the License. A copy of the License\n *  is located at                                                            \n *                                                                              \n *      http://www.apache.org/licenses/                                        \n *  or in the 'license' file accompanying this file. This file is distributed on\n *  an 'AS IS' BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or\n *  implied. See the License for the specific language governing permissions and\n *  limitations under the License.                                              \n******************************************************************************/\n\nconst ALLOW_ORIGIN_HEADER = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Credentials': true,\n    'Strict-Transport-Security': 'max-age=31536000; includeSubDomains',\n    'X-Frame-Options': 'DENY'\n};\n\nfunction Response(statusCode, body = {}, cors = false, customHeaders = null) {\n    let response = {\n        statusCode,\n        body: JSON.stringify(body)\n    };\n\n    if (cors) {\n        response[\"headers\"] = ALLOW_ORIGIN_HEADER;\n    }\n\n    if (customHeaders) {\n        let headers = response[\"headers\"];\n        headers = {\n            ...headers,\n            ...customHeaders\n        };\n        response[\"headers\"] = headers;\n    }\n\n    return response;\n}\n\nfunction Error(statusCode, error, description, cors = false) {\n    console.log(error, (error instanceof Error), error.toString());\n    let errorMessage = \"\";\n    let errorName = \"Error\";\n    let errorStack = \"\";\n    let developerMessage = \"\";\n\n    if (error.hasOwnProperty(\"message\")) {\n        errorMessage = error.message;\n    }\n    if (error.hasOwnProperty(\"name\")) {\n        errorName = error.name;\n    }\n    if (error.hasOwnProperty(\"stack\")) {\n        errorStack = error.stack;\n    }\n\n    if (error.hasOwnProperty(\"developerMessage\")) {\n        developerMessage = error.developerMessage;\n    }\n\n    let response = {\n        statusCode,\n        body: JSON.stringify({\n            errorMessage: description,\n            // Uncomment the following lines for descriptive error messages.\n            /*_error: {\n                message: errorMessage,\n                name: errorName,\n                stack: errorStack,\n                developerMessage\n            }*/\n        })\n    };\n\n    if (cors) {\n        response[\"headers\"] = ALLOW_ORIGIN_HEADER;\n    }\n\n    console.log(\"Error:\", response);\n    return response;\n}\n\nconst Responder = {\n    Response,\n    Error\n};\n\nexport {Responder};\n","module.exports = require(\"https\");","module.exports = require(\"awesome-phonenumber\");"],"sourceRoot":""}